package ru.stimmax.cotlincouse.lessons.lesson10.homework

fun main() {
    // 1. Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
    val map1 = mapOf(1 to 1, 2 to 2, 3 to 3, 4 to 4)
    println(map1)
//2. Создайте словарь, инициализированный несколькими парами "ключ-значение",
// где ключи - float, а значения - double
    val map2 = mapOf<Float, Double>( 1.1F to 1.1, 2.2F to 2.2, 3.3F to 3.3 )
//3. Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
    val map3 = mutableMapOf(1 to "один", 2 to "два", 3 to "три")
//4. Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
    map3[4] = "четыре"
    map3[5] = "пять"
    println(map3)
// 5. Используя словарь из предыдущего задания, извлеките значение, используя ключ.
// Попробуй получить значение с ключом, которого в словаре нет.
    println(map3[4])
    println(map3[6])
//6. Удалите определенный элемент из изменяемого словаря по его ключу.
    map3.remove(1)
    println(map3)
//7. Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение.
// Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
    val map4: Map<Double, Int> = mapOf(234.432 to 2, 456.654 to 4, 765.45 to 0)
    for ((key, arg) in map4) {
        if (arg == 0) {
            println("бесконечность")
        } else {
            println(key / arg)
        }
    }
// 8. Измените значение для существующего ключа в изменяемом словаре.
    map3[4] = "four"
    println(map3)
// 9. Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
    val map5 = mapOf(1 to "Один", 2 to "Два", 3 to "Три")
    val map6 = mapOf(4 to "Четыре", 5 to "Пять", 6 to "Шесть")
    val map7 = mutableMapOf<Int, String>()
    for ((key, arg) in map5) {
        map7[key] = arg

    }
    for ((key, arg) in map6) {
        map7[key] = arg
    }
    println(map7)

// 10. Создайте словарь, где ключами являются строки, а значениями - списки целых чисел.
// Добавьте несколько элементов в этот словарь.
    val x1 = "Первый список"
    val x2 = mutableListOf(1, 2, 3, 4, 5, 6, 7, 8, 8, 10)

    val y1 = "Второй список"
    val y2 = mutableListOf(11, 12, 13, 14, 15, 16)

    val map8 = mutableMapOf(x1 to x2, y1 to y2)

    map8[x1]?.add(0, 0)
    map8[y1]?.addAll(listOf(17, 18, 19, 20))

    map8["Третий список"] = mutableListOf(21, 22, 23, 24, 25)
    println(map8)

// 11. Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк.
// Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк) и добавь в
// это множество ещё строку. Распечатай полученное множество.
    val num1 = 1
    val set1 = mutableSetOf("Один", "One")

    val num2 = 2
    val set2 = mutableSetOf("Два", "Two")

    val map9 = mutableMapOf(num1 to set1, num2 to set2)
    map9[num2]?.add("Zwei")
    println(map9[num2])

// 12. Создай словарь, где ключами будут пары чисел. Через перебор найди значение у которого пара будет
// содержать цифру 5 в качестве первого или второго значения.
    val map10 = mapOf((1 to 2) to "Первое значение", (3 to 4) to "Второе значение", (5 to 6) to "Третье значение")
    for ((key, arg) in map10) {
        if (key.first == 5 || key.second == 5) {
            println(arg)
            break
        }

    }

    // Задачи на подбор оптимального типа для словаря
// 1. Словарь библиотека: Ключи - автор книги, значения - список книг
    val library = mutableMapOf<String, List<String>>()
// 2. Справочник растений: Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
    val plantCatalog = mapOf<String, List<String>>("Деревья" to listOf("Сосна", "Береза"), "Цветы" to listOf("Роза", "Ромашка"))
// 3. Четвертьфинала: Ключи - названия спортивных команд, значения - списки игроков каждой команды
    val quarterfinal = mutableMapOf<String, List<String>>()
// 4. Курс лечения: Ключи - даты, значения - список препаратов принимаемых в дату
    val treatmentCourse = mutableMapOf<String, List<String>>()
// 5. Словарь путешественника: Ключи - страны, значения - словари из городов со списком интересных мест.
    val travelerGuide: MutableMap<String, MutableMap<String, List<String>>> = mutableMapOf()



















}